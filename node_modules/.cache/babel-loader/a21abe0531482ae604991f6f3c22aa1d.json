{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withKeys as _withKeys, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-8c9ff28e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"bloc-modale\"\n};\nconst _hoisted_2 = {\n  class: \"modale-card\"\n};\nconst _hoisted_3 = {\n  class: \"card_name\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" In card \");\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"description\"\n}, \"Description\", -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = {\n  key: 2,\n  class: \"comment_section\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CommentView = _resolveComponent(\"CommentView\");\n\n  return $props.showDetailModale ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"overlay\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $props.toggleDetailModale && $props.toggleDetailModale(...args))\n  }), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $props.toggleDetailModale && $props.toggleDetailModale(...args)),\n    class: \"btn-x-modale btn btn-outline-dark\"\n  }, \" X \"), _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"title\",\n    spellcheck: \"false\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.tempTitle = $event),\n    onBlur: _cache[3] || (_cache[3] = (...args) => $options.updatePostTitle && $options.updatePostTitle(...args))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.tempTitle]]), _createElementVNode(\"p\", _hoisted_3, [_hoisted_4, _createElementVNode(\"strong\", null, [_createElementVNode(\"u\", null, _toDisplayString(this.card_name), 1\n  /* TEXT */\n  )])]), _hoisted_5, _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"content\",\n    spellcheck: \"false\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.tempContent = $event),\n    placeholder: \"Enter detailed content\",\n    onBlur: _cache[5] || (_cache[5] = (...args) => $options.updatePostContent && $options.updatePostContent(...args))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.tempContent]]), !$data.showComments ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"btn_show\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.toggleComments && $options.toggleComments(...args))\n  }, \" Show Comments \")) : (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"btn_hide\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.toggleComments && $options.toggleComments(...args))\n  }, \" Hide Comments \")), _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"new_comment\",\n    spellcheck: \"false\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.tempComment_content = $event),\n    placeholder: \"Enter new comment\",\n    onKeyup: _cache[9] || (_cache[9] = _withKeys($event => $options.createComment(), [\"enter\"]))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.tempComment_content]]), $data.showComments ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createBlock(_component_CommentView, {\n      key: comment.id,\n      comment_id: comment.id,\n      comment_author_name: comment.author_name,\n      comment_content: comment.content,\n      comment_date: comment.date\n    }, null, 8\n    /* PROPS */\n    , [\"comment_id\", \"comment_author_name\", \"comment_content\", \"comment_date\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = (...args) => $props.toggleDetailModale && $props.toggleDetailModale(...args)),\n    class: \"btn-ok-modale btn-outline-dark\"\n  }, \" OK \")])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;;AAoHOA,OAAK,EAAC;;;AAGJA,OAAK,EAAC;;;AAaNA,OAAK,EAAC;;;iDAAY;;gEAMrBC,oBAAsC,GAAtC,EAAsC;AAAnCD,OAAK,EAAC;AAA6B,CAAtC,EAAuB,aAAvB,EAAkC;AAAA;AAAlC;;;;AAqBKA,OAAK,EAAC;;;;;SA3CgBE,yCAA/BC,oBA4DM,KA5DN,cA4DM,CA3DJF,oBAAuD,KAAvD,EAAuD;AAAlDD,SAAK,EAAC,SAA4C;AAAjCI,WAAK,yCAAEF,+DAAF;AAA4B,GAAvD,CA2DI,EAzDJD,oBAwDM,KAxDN,cAwDM,CAvDJA,oBAKM,KALN,EAKM;AAJHG,WAAK,yCAAEF,+DAAF,CAIF;AAHJF,SAAK,EAAC;AAGF,GALN,EAGC,KAHD,CAuDI,kBAjDJC,oBAKE,UALF,EAKE;AAJAD,SAAK,EAAC,OAIN;AAHAK,cAAU,EAAC,OAGX;+DAFSC,kBAASC,OAElB;AADCC,UAAI,yCAAEC,6DAAF;AACL,GALF;;AAAA,oBAGWH,kBA8CP,EA3CJL,oBAKI,GALJ,cAKI,aAHFA,oBAEC,QAFD,EAEC,IAFD,EAEC,CADEA,oBAA2B,GAA3B,EAA2B,IAA3B,EAA2BS,sBAAhBC,SAAgB,CAA3B,EAAoB;AAAA;AAApB,GACF,CAFD,CAGE,CALJ,CA2CI,EArCJC,UAqCI,kBApCJX,oBAME,UANF,EAME;AALAD,SAAK,EAAC,SAKN;AAJAK,cAAU,EAAC,OAIX;+DAHSC,oBAAWC,OAGpB;AAFAM,eAAW,EAAC,wBAEZ;AADCL,UAAI,yCAAEC,iEAAF;AACL,GANF;;AAAA,oBAGWH,oBAiCP,GA7B4BA,oCAAhCH,oBAES,QAFT,EAES;UAAA;AAFDH,SAAK,EAAC,UAEL;AAFsCI,WAAK,yCAAEK,2DAAF;AAE3C,GAFT,EAAsE,iBAAtE,oBAGAN,oBAES,QAFT,EAES;UAAA;AAFDH,SAAK,EAAC,UAEL;AAFwBI,WAAK,yCAAEK,2DAAF;AAE7B,GAFT,EAAwD,iBAAxD,EA0BI,kBAvBJR,oBAME,UANF,EAME;AALAD,SAAK,EAAC,aAKN;AAJAK,cAAU,EAAC,OAIX;+DAHSC,4BAAmBC,OAG5B;AAFAM,eAAW,EAAC,mBAEZ;AADCC,WAAK,gDAAQL,wBAAR,EAAqB,SAArB;AACN,GANF;;AAAA,oBAGWH,4BAoBP,EAhB+BA,oCAAnCH,oBASM,KATN,cASM,oBARJA,oBAOEY,SAPF,EAOE,IAPF,EAOEC,YANkBV,cAMlB,EANOW,OAAmB,IAAZ;yBADhBC,aAOEC,sBAPF,EAOE;AALCC,SAAG,EAAEH,OAAO,CAACI,EAKd;AAJCC,gBAAU,EAAEL,OAAO,CAACI,EAIrB;AAHCE,yBAAmB,EAAEN,OAAO,CAACO,WAG9B;AAFCC,qBAAe,EAAER,OAAO,CAACS,OAE1B;AADCC,kBAAY,EAAEV,OAAO,CAACW;AACvB,KAPF;;AAAA;GAOE,CAPF;;AAAA,GAQI,EATN,sCAgBI,EANJ3B,oBAKS,QALT,EAKS;AAJNG,WAAK,2CAAEF,+DAAF,CAIC;AAHPF,SAAK,EAAC;AAGC,GALT,EAGC,MAHD,CAMI,CAxDN,CAyDI,CA5DN","names":["class","_createElementVNode","$props","_createElementBlock","onClick","spellcheck","$data","$event","onBlur","$options","_toDisplayString","card_name","_hoisted_5","placeholder","onKeyup","_Fragment","_renderList","comment","_createBlock","_component_CommentView","key","id","comment_id","comment_author_name","author_name","comment_content","content","comment_date","date"],"sourceRoot":"","sources":["/home/fdizes/Rendu/C-DEV-121-PAR-1-2-twp-florent.dizes/mvvm_twp/src/components/DetailModale.vue"],"sourcesContent":["<script>\r\nimport CommentView from \"@/components/CommentView.vue\";\r\n\r\nexport default {\r\n  name: \"DetailModale\",\r\n  components: { CommentView },\r\n  props: [\r\n    \"showDetailModale\",\r\n    \"toggleDetailModale\",\r\n    \"post_id\",\r\n    \"title\",\r\n    \"content\",\r\n    \"card_name\",\r\n  ],\r\n  emits: [],\r\n  data() {\r\n    return {\r\n      tempTitle: this.title,\r\n      tempContent: this.content,\r\n      comments: [],\r\n      showComments: false,\r\n      tempComment_content: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    toggleComments() {\r\n      this.showComments = !this.showComments;\r\n    },\r\n    updatePostTitle() {\r\n      const WPAPI = require(\"wpapi\");\r\n      console.log(this.post_id);\r\n\r\n      const wp = new WPAPI({\r\n        endpoint: \"http://localhost/wordpress/index.php/wp-json/\",\r\n        username: \"fdizes\",\r\n        password: \"azerty\",\r\n      });\r\n      wp.posts()\r\n        .id(this.post_id)\r\n        .update({\r\n          title: this.tempTitle,\r\n        })\r\n        .then(function (response) {\r\n          console.log(response);\r\n        });\r\n    },\r\n    updatePostContent() {\r\n      const WPAPI = require(\"wpapi\");\r\n      console.log(this.post_id);\r\n\r\n      const wp = new WPAPI({\r\n        endpoint: \"http://localhost/wordpress/index.php/wp-json/\",\r\n        username: \"fdizes\",\r\n        password: \"azerty\",\r\n      });\r\n      wp.posts()\r\n        .id(this.post_id)\r\n        .update({\r\n          content: this.tempContent,\r\n        })\r\n        .then(function (response) {\r\n          console.log(response);\r\n        });\r\n    },\r\n    createComment() {\r\n      if (this.tempComment_content !== \"\") {\r\n        const WPAPI = require(\"wpapi\");\r\n        const wp = new WPAPI({\r\n          endpoint: \"http://localhost/wordpress/index.php/wp-json/\",\r\n          username: \"fdizes\",\r\n          password: \"azerty\",\r\n        });\r\n\r\n        wp.comments()\r\n          .create({\r\n            content: this.tempComment_content,\r\n            post: this.post_id,\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n          });\r\n        this.tempComment_content = \"\";\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    const WPAPI = require(\"wpapi\");\r\n    console.log(this.post_id);\r\n\r\n    const wp = new WPAPI({\r\n      endpoint: \"http://localhost/wordpress/index.php/wp-json/\",\r\n      username: \"fdizes\",\r\n      password: \"azerty\",\r\n    });\r\n\r\n    let comments = [];\r\n    wp.comments()\r\n      .post(this.post_id)\r\n      .get()\r\n      .then((data) => {\r\n        console.log(data);\r\n        data.forEach((d) => {\r\n          comments.push({\r\n            id: d.id,\r\n            author_name: d.author_name,\r\n            content: d.content.rendered.replace(/(<([^>]+)>)/gi, \"\"),\r\n            date: d.date,\r\n          });\r\n        });\r\n        this.comments = comments;\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"bloc-modale\" v-if=\"showDetailModale\">\r\n    <div class=\"overlay\" @click=\"toggleDetailModale\"></div>\r\n\r\n    <div class=\"modale-card\">\r\n      <div\r\n        @click=\"toggleDetailModale\"\r\n        class=\"btn-x-modale btn btn-outline-dark\"\r\n      >\r\n        X\r\n      </div>\r\n      <textarea\r\n        class=\"title\"\r\n        spellcheck=\"false\"\r\n        v-model=\"tempTitle\"\r\n        @blur=\"updatePostTitle\"\r\n      />\r\n      <p class=\"card_name\">\r\n        In card\r\n        <strong\r\n          ><u>{{ this.card_name }}</u></strong\r\n        >\r\n      </p>\r\n      <p class=\"description\">Description</p>\r\n      <textarea\r\n        class=\"content\"\r\n        spellcheck=\"false\"\r\n        v-model=\"tempContent\"\r\n        placeholder=\"Enter detailed content\"\r\n        @blur=\"updatePostContent\"\r\n      />\r\n      <button class=\"btn_show\" v-if=\"!showComments\" @click=\"toggleComments\">\r\n        Show Comments\r\n      </button>\r\n      <button class=\"btn_hide\" v-else @click=\"toggleComments\">\r\n        Hide Comments\r\n      </button>\r\n      <textarea\r\n        class=\"new_comment\"\r\n        spellcheck=\"false\"\r\n        v-model=\"tempComment_content\"\r\n        placeholder=\"Enter new comment\"\r\n        @keyup.enter=\"createComment()\"\r\n      />\r\n      <div class=\"comment_section\" v-if=\"showComments\">\r\n        <CommentView\r\n          v-for=\"comment in comments\"\r\n          :key=\"comment.id\"\r\n          :comment_id=\"comment.id\"\r\n          :comment_author_name=\"comment.author_name\"\r\n          :comment_content=\"comment.content\"\r\n          :comment_date=\"comment.date\"\r\n        />\r\n      </div>\r\n      <button\r\n        @click=\"toggleDetailModale\"\r\n        class=\"btn-ok-modale btn-outline-dark\"\r\n      >\r\n        OK\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n.bloc-modale {\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 200;\r\n}\r\n\r\n.overlay {\r\n  background: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.modale-card {\r\n  min-height: 500px;\r\n  height: auto;\r\n  width: 500px;\r\n  background: #f1f1f1;\r\n  position: fixed;\r\n  top: 5%;\r\n  border-radius: 2px;\r\n  padding: 10px 25px 50px;\r\n  max-height: 100%;\r\n  overflow-y: auto;\r\n}\r\n\r\n.title {\r\n  box-sizing: border-box;\r\n  height: 35px;\r\n  width: 90%;\r\n  font-weight: 600;\r\n  justify-content: left;\r\n  font-size: 20px;\r\n  background: none;\r\n  outline: none;\r\n  border-style: none;\r\n  resize: none;\r\n  overflow: hidden;\r\n}\r\n\r\n.title:hover {\r\n  background-color: lightgray;\r\n}\r\n\r\n.card_name {\r\n  font-size: 13px;\r\n}\r\n\r\n.description {\r\n  margin-top: 30px;\r\n  font-weight: 600;\r\n}\r\n\r\n.content {\r\n  box-sizing: border-box;\r\n  height: 100px;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  background-color: lightgray;\r\n  outline: none;\r\n  border-style: none;\r\n  resize: none;\r\n  overflow: hidden;\r\n  font-size: 13px;\r\n  border-radius: 3px;\r\n}\r\n\r\n.new_comment {\r\n  width: 100%;\r\n  height: 30px;\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  resize: none;\r\n  font-size: 13px;\r\n  border-radius: 2px;\r\n}\r\n\r\n.btn-x-modale {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n}\r\n\r\n.btn-ok-modale {\r\n  margin: 20px auto;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}