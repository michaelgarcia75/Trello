{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"span\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, _toDisplayString($props.comment_author_name), 1\n  /* TEXT */\n  ), _hoisted_1, _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"comment_content\",\n    spellcheck: \"false\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.tempComment_content = $event),\n    onBlur: _cache[1] || (_cache[1] = (...args) => $options.updateComment && $options.updateComment(...args))\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.tempComment_content]]), _createElementVNode(\"button\", {\n    class: \"delete_comment\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.deleteComment && $options.deleteComment(...args)),\n    type: \"button\"\n  }, \" Delete Comment \")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAEEA,oBAAa,MAAb,EAAa,IAAb,EAAa,IAAb,EAAa;AAAA;AAAb;;;6DADAA,oBAAgC,GAAhC,EAAgC,IAAhC,EAAgCC,iBAA1BC,0BAA0B,CAAhC,EAAyB;AAAA;AAAzB,KACAC,4BACAH,oBAKE,UALF,EAKE;AAJAI,SAAK,EAAC,iBAIN;AAHAC,cAAU,EAAC,OAGX;+DAFSC,4BAAmBC,OAE5B;AADCC,UAAI,yCAAEC,yDAAF;AACL,GALF;;AAAA,oBAGWH,8BAGXN,oBAES,QAFT,EAES;AAFDI,SAAK,EAAC,gBAEL;AAFuBM,WAAK,yCAAED,yDAAF,CAE5B;AAF6CE,QAAI,EAAC;AAElD,GAFT,EAAoE,kBAApE","names":["_createElementVNode","_toDisplayString","$props","_hoisted_1","class","spellcheck","$data","$event","onBlur","$options","onClick","type"],"sourceRoot":"","sources":["/home/fdizes/Rendu/C-DEV-121-PAR-1-2-twp-florent.dizes/mvvm_twp/src/components/CommentView.vue"],"sourcesContent":["<template>\r\n  <p>{{ comment_author_name }}</p>\r\n  <span></span>\r\n  <textarea\r\n    class=\"comment_content\"\r\n    spellcheck=\"false\"\r\n    v-model=\"tempComment_content\"\r\n    @blur=\"updateComment\"\r\n  />\r\n  <button class=\"delete_comment\" @click=\"deleteComment\" type=\"button\">\r\n    Delete Comment\r\n  </button>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"commentView\",\r\n  props: [\r\n    \"comment_id\",\r\n    \"comment_author_name\",\r\n    \"comment_content\",\r\n    \"comment_date\",\r\n  ],\r\n  data() {\r\n    return {\r\n      tempComment_content: this.comment_content,\r\n    };\r\n  },\r\n  methods: {\r\n    deleteComment() {\r\n      const WPAPI = require(\"wpapi\");\r\n\r\n      const wp = new WPAPI({\r\n        endpoint: \"http://localhost/wordpress/index.php/wp-json/\",\r\n        username: \"fdizes\",\r\n        password: \"azerty\",\r\n      });\r\n\r\n      wp.comments()\r\n        .id(this.comment_id)\r\n        .param(\"force\", true)\r\n        .delete()\r\n        .then((data) => {\r\n          console.log(data);\r\n          window.location.reload();\r\n        });\r\n    },\r\n    updateComment() {\r\n      const WPAPI = require(\"wpapi\");\r\n\r\n      const wp = new WPAPI({\r\n        endpoint: \"http://localhost/wordpress/index.php/wp-json/\",\r\n        username: \"fdizes\",\r\n        password: \"azerty\",\r\n      });\r\n      wp.comments()\r\n        .id(this.comment_id)\r\n        .update({\r\n          content: this.tempComment_content,\r\n        })\r\n        .then(function (response) {\r\n          console.log(response);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.comment_content {\r\n  font-size: 12px;\r\n  width: 100%;\r\n  resize: none;\r\n}\r\n\r\n.delete_comment {\r\n  font-size: 12px;\r\n  border: none;\r\n}\r\n\r\n.delete_comment:hover {\r\n  color: blue;\r\n  text-decoration: underline;\r\n}\r\n</style>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}